CMAKE_MINIMUM_REQUIRED(VERSION 3.15)

PROJECT(GlassyRenderGUI VERSION 1.0 LANGUAGES CXX)

OPTION(INSTALL_LOCAL "Instal into build folder?" ON)
OPTION(BUILD_STATIC "Build static?" OFF)

SET(CMAKE_CXX_STANDARD 17)

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)
SET(CMAKE_AUTOUIC ON)

ADD_LIBRARY(PythonQT IMPORTED STATIC)
SET_TARGET_PROPERTIES(PythonQT PROPERTIES IMPORTED_LOCATION "C:/msys32/mingw64/lib/libPythonQt-Qt5-Python38.dll.a")

ADD_LIBRARY(PythonQTAll IMPORTED STATIC)
SET_TARGET_PROPERTIES(PythonQTAll PROPERTIES IMPORTED_LOCATION "C:/msys32/mingw64/lib/libPythonQt_QtAll-Qt5-Python38.dll.a")

IF (${BUILD_STATIC})
    SET(CMAKE_PREFIX_PATH "C:/msys32/mingw64/qt5-static")
ELSE ()
    SET(CMAKE_PREFIX_PATH "C:/msys32/mingw64/qt5")
ENDIF ()
FIND_PACKAGE(Qt5 COMPONENTS Widgets Gui OpenGL OpenGLExtensions REQUIRED)

ADD_EXECUTABLE(GlassyRenderGUI main.cpp)

TARGET_COMPILE_OPTIONS(GlassyRenderGUI PRIVATE)

IF (${BUILD_STATIC})
    TARGET_COMPILE_OPTIONS(GlassyRenderGUI PRIVATE -DBUILD_STATIC)
ENDIF ()

TARGET_INCLUDE_DIRECTORIES(GlassyRenderGUI PRIVATE C:/msys32/mingw64/include/pythonqt)
TARGET_INCLUDE_DIRECTORIES(GlassyRenderGUI PRIVATE include)

FILE(GLOB SOURCES src/**.cpp src/**/**.cpp)
FILE(GLOB UI ui/**.ui ui/**/**.ui)
FILE(GLOB HEADERS include/**.h include/**/**.h)
TARGET_SOURCES(GlassyRenderGUI PRIVATE ${UI} ${SOURCES} ${HEADERS})

TARGET_COMPILE_OPTIONS(GlassyRenderGUI PRIVATE "-Wall" "-Wpedantic" "-Wextra" "-fexceptions")


TARGET_LINK_LIBRARIES(GlassyRenderGUI Qt5::Widgets Qt5::Gui Qt5::OpenGL Qt5::OpenGLExtensions PythonQT PythonQTAll)

IF (${INSTALL_LOCAL})
    SET(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_BINARY_DIR})
ENDIF ()

FILE(GLOB STATIC_BUILD_DLL lib/**.dll)
INSTALL(TARGETS GlassyRenderGUI CONFIGURATIONS ${CMAKE_BUILD_TYPE} RUNTIME DESTINATION /)
INSTALL(FILES ${STATIC_BUILD_DLL} DESTINATION /)
INSTALL(DIRECTORY shaders DESTINATION /)
INSTALL(DIRECTORY resources DESTINATION /)
INSTALL(DIRECTORY lib/platforms DESTINATION /)
